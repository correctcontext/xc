#!/usr/bin/env bash
set -euo pipefail
export SHELLOPTS
source libbashuu
source xc-lib

uu::command::set-description "deploy nodes"
uu::command::set-scope cluster
uu::command::import-option xc-option-xc-name
uu::command::import-option xc-option-xc-nodes-count
uu::command::main "$@"

NODES_IDS=$(xc list-nodes-ids)
NODES_COUNT=$(xc list-nodes-ids|wc -l)
NEW_NODES_COUNT=$(xc::utils::calculate-number-change $NODES_COUNT $XC_NODES_COUNT)

if [ $NEW_NODES_COUNT -ne $NODES_COUNT ];then
  echo "Nodes count: $NODES_COUNT -> $NEW_NODES_COUNT"
else
  echo "Nodes count: $NEW_NODES_COUNT (no change)"
fi

echo "Stopped containers won't be started. This is just a demo script. If you want to restart it, destroy -> deploy"
echo "Creating missing nodes..."
for NODE_NR in `seq $(( $NODES_COUNT +1 )) $NEW_NODES_COUNT`
do
  if [ $(xc list-nodes-ids | wc -l) -eq 0 ];then
    docker run -d --label "xc=cassandra-$XC_NAME" cassandra:latest
  else
    docker run -d --label "xc=cassandra-$XC_NAME" --link $(xc list-nodes-ids | head -n1):cassandra cassandra:latest
  fi
done

if [ $NEW_NODES_COUNT -lt $NODES_COUNT ];then
  echo "Removing superfluous nodes..."
  for XC_NODE_ID in $(xc list-nodes-ids | tail -n $(( $NODES_COUNT - $NEW_NODES_COUNT )) )
  do
    echo "Removing node $XC_NODE_ID..."
    docker rm -f $XC_NODE_ID
  done
fi
